version: "3.4"

services:
  sql-server:
    image: gustavohrgomes/nerdstore-sql-server:latest
    container_name: nerdstore-sql-server
    build:
      context: ../sql
      dockerfile: ./Dockerfile
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Senha123!"
      ACCEPT_EULA: "Y"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbit-nerdstore
    environment:
      RABBITMQ_DEFAULT_USER: "nerdstore"
      RABBITMQ_DEFAULT_PASS: "nerdstore"
    ports:
      - "5672:5672"
      - "15672:15672"

  web-mvc:
    image: gustavohrgomes/nerdstore-web-mvc-ecommerce:latest
    container_name: nerdstore-web-mvc
    build:
      context: ../src
      dockerfile: ./web/NSE.WebApp.MVC/Dockerfile
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://*:5070
    depends_on:
      - api-catalogo
      - api-identidade
      - api-cliente
      - api-bff-compras

  api-bff-compras:
    image: gustavohrgomes/nerdstore-api-bff-compras:latest
    container_name: nerdstore-api-bff-compras
    build:
      context: ../src
      dockerfile: ./api gateways/NSE.Bff.Compras/Dockerfile
    restart: always
    ports:
      - "5076:5076"
      - "7076:7076"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:7076;http://+:5076
      - ASPNETCORE_Kestrel__Certificates__Default__Password=nerdstore
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/nerdstore-cert.pfx
    volumes:
      - ./certs:/https:ro
    depends_on:
      - rabbitmq
      - api-identidade
      - api-carrinho
      - api-pagamento
      - api-pedido

  api-identidade:
    image: gustavohrgomes/nerdstore-api-identiade:latest
    container_name: nerdstore-api-identidade
    restart: always
    build:
      context: ../src
      dockerfile: ./services/NSE.Identidade.API/Dockerfile
    ports:
      - "5267:5267"
      - "7267:7267"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:7267;http://+:5267
      - ASPNETCORE_Kestrel__Certificates__Default__Password=nerdstore
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/nerdstore-cert.pfx
    volumes:
      - ./certs:/https:ro

  api-carrinho:
    image: gustavohrgomes/nerdstore-api-carrinho:latest
    container_name: nerdstore-api-carrinho
    build:
      context: ../src
      dockerfile: ./services/NSE.Carrinho.API/Dockerfile
    restart: always
    ports:
      - "5215:5215"
      - "7215:7215"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:7215;http://+:5215
      - ASPNETCORE_Kestrel__Certificates__Default__Password=nerdstore
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/nerdstore-cert.pfx
    volumes:
      - ./certs:/https:ro
    depends_on:
      - rabbitmq
      - api-identidade
      - sql-server

  api-catalogo:
    image: gustavohrgomes/nerdstore-api-catalogo:latest
    container_name: nerdstore-api-catalogo
    restart: always
    build:
      context: ../src
      dockerfile: ./services/NSE.Catalogo.API/Dockerfile
    ports:
      - "5083:5083"
      - "7083:7083"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:7083;http://+:5083
      - ASPNETCORE_Kestrel__Certificates__Default__Password=nerdstore
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/nerdstore-cert.pfx
    volumes:
      - ./certs:/https:ro
    depends_on:
      - rabbitmq
      - sql-server

  api-cliente:
    image: gustavohrgomes/nerdstore-api-cliente:latest
    container_name: nerdstore-api-cliente
    build:
      context: ../src
      dockerfile: ./services/NSE.Clientes.API/Dockerfile
    restart: always
    ports:
      - "5254:5254"
      - "7254:7254"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:7254;http://+:5254
      - ASPNETCORE_Kestrel__Certificates__Default__Password=nerdstore
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/nerdstore-cert.pfx
    volumes:
      - ./certs:/https:ro
    depends_on:
      - rabbitmq
      - api-identidade
      - sql-server

  api-pagamento:
    image: gustavohrgomes/nerdstore-api-pagamento:latest
    container_name: nerdstore-api-pagamento
    build:
      context: ../src
      dockerfile: ./services/NSE.Pagamentos.API/Dockerfile
    restart: always
    ports:
      - "5220:5220"
      - "7220:7220"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:7220;http://+:5220
      - ASPNETCORE_Kestrel__Certificates__Default__Password=nerdstore
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/nerdstore-cert.pfx
    volumes:
      - ./certs:/https:ro
    depends_on:
      - rabbitmq
      - api-identidade
      - api-pedido
      - sql-server

  api-pedido:
    image: gustavohrgomes/nerdstore-api-pedido:latest
    container_name: nerdstore-api-pedido
    build:
      context: ../src
      dockerfile: ./services/NSE.Pedidos.API/Dockerfile
    restart: always
    ports:
      - "5105:5105"
      - "7105:7105"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:7105;http://+:5105
      - ASPNETCORE_Kestrel__Certificates__Default__Password=nerdstore
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/nerdstore-cert.pfx
    volumes:
      - ./certs:/https:ro
    depends_on:
      - rabbitmq
      - sql-server
      - api-identidade

  nerdstore-server:
    image: gustavohrgomes/nerdstore-server:latest
    container_name: nerdstore-server
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web-mvc

  nerdstore-seq:
    image: datalust/seq:latest
    container_name: nerdstore-seq
    ports:
        - 5341:80
    environment:
        ACCEPT_EULA: "Y"

  # if you want run elasticsearch and kibana alongside with this application, just uncomment the lines bellow.

  # elasticsearch:
  #   hostname: elasticsearch
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0-amd64
  #   environment:
  #     - discovery.type=single-node
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - http.host=0.0.0.0
  #     - transport.host=127.0.0.1
  #     - network.host=0.0.0.0
  #     - cluster.name="nerdstore_elastic_stack_logging"
  #     - node.name="nerdstore_elastic_stack_logging_data"
  #     - discovery.zen.minimum_master_nodes=1
  #     - http.cors.enabled=true
  #     - http.cors.allow-origin="*"
  #   volumes:
  #     - elasticsearch_data:/usr/share/elasticsearch/data
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"

  # kibana:
  #   # container_name: Kibana
  #   hostname: kibana
  #   image: docker.elastic.co/kibana/kibana:7.13.0-amd64
  #   environment:
  #     - server.name=kibana
  #     - server.host="0"
  #     - elasticsearch.url=http://elasticsearch:9200
  #   ports:
  #     - "5601:5601"


volumes:
  elasticsearch_data: