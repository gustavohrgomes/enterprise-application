name: Tests

on:
  workflow_call:
    inputs:
      project-path: 
        required: true
        description: "Path of the project that the test project refeers to."
        type: string
      test-project-path:
        required: true
        description: "Path of the test project."
        type: string
      runsettings-path:
        description: "Path to runsettings.xml."
        type: string
        default: ""
    secrets:
      sonar-token:
        required: true
        description: "Sonar Cloud Token configured in the repository"


jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.sonar-token }}
        run: |
          dotnet-sonarscanner begin \
          /k:"nerdstore-enterprise_carrinho-api" \
          /o:"gustavohrgomes" \
          /d:sonar.sources="src/services/NSE.Carrinho.API/" \
          /d:sonar.tests="tests/Services/NSE.Carrinho.API.Unit" \
          /d:sonar.pullrequest.base=${{ github.event.pull_request.base.ref }} \
          /d:sonar.pullrequest.branch=${{ github.event.pull_request.head.ref }} \
          /d:sonar.login="$SONAR_TOKEN" \
          /d:sonar.host.url="https://sonarcloud.io" \

      - name: Restore
        run: dotnet restore

      - name: Build Application
        run: dotnet build --no-restore

      - name: End SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.sonar-token }}
        run: dotnet-sonarscanner end /d:sonar.login="$SONAR_TOKEN"

      # - name: Run Tests
      #   if: ${{ inputs.runsettings-path == '' }}
      #   env:
      #     COVERAGE_REPORTS_DIR: ${{ github.workspace }}/TestResults
      #   run: |
      #     dotnet test ${{ inputs.test-project-path }} \
      #     --collect:"XPlat Code Coverage" \
      #     --results-directory:"$COVERAGE_REPORTS_DIR/" \
      #     -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover \
      #     DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.ExcludeByAttribute=CompilerGeneratedAttribute

      # - name: Run Tests
      #   if: ${{ inputs.runsettings-path != '' }}
      #   env:
      #     COVERAGE_REPORTS_DIR: ${{ github.workspace }}/TestResults
      #   run: |
      #     dotnet test ${{ inputs.test-project-path }} \
      #     --collect:"XPlat Code Coverage" \
      #     --results-directory:"tests/Services/NSE.Carrinho.API.Unit/TestResults/" \
      #     --settings ${{ inputs.runsettings-path }}